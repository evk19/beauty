# Generated by Django 3.1.5 on 2021-01-11 14:36

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Зарегистрировался')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Был в сети')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('userType', models.CharField(choices=[('admin', 'Администратор'), ('user', 'Пользователь'), ('driver', 'Водитель'), ('operator', 'Оператор')], default='user', max_length=20, verbose_name='Тип пользователя')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=100, verbose_name='Фамилия')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('licensePlate', models.CharField(max_length=120, verbose_name='Номер авто')),
                ('color', models.CharField(choices=[('yellow', 'жёлтый'), ('green', 'зелёный'), ('red', 'красный'), ('black', 'черный'), ('white', 'белый'), ('blue', 'синий')], default='white', max_length=20, verbose_name='Цвет авто')),
                ('brand', models.CharField(choices=[('BMW', 'BMW'), ('LADA', 'Lada'), ('CHEVROLET', 'Chevrolet'), ('HYUNDAI', 'Hyundai'), ('MERSEDES', 'Mersedes'), ('PEUGEOT', 'Peugeot')], default='LADA', max_length=20, verbose_name='Бренд')),
                ('releaseYear', models.DateField(default=datetime.date.today, verbose_name='Дата выпуска')),
                ('isPersonal', models.BooleanField(default=False, verbose_name='Личное авто')),
            ],
            options={
                'verbose_name': 'машина',
                'verbose_name_plural': 'машины',
            },
        ),
        migrations.CreateModel(
            name='CarType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeName', models.CharField(max_length=120, unique=True, verbose_name='Тип машины')),
                ('typeDescription', models.TextField(blank=True, verbose_name='Описание типа')),
            ],
            options={
                'verbose_name': 'тип машины',
                'verbose_name_plural': 'типы машин',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discountAmount', models.IntegerField(default=0, verbose_name='Скидка в %')),
                ('promoCode', models.CharField(max_length=200, unique=True, verbose_name='Промокод')),
            ],
            options={
                'verbose_name': 'скидка',
                'verbose_name_plural': 'скидки',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото водителя')),
                ('birthdate', models.DateField(verbose_name='Дата рождения')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Телефон')),
                ('workExperience', models.IntegerField(default=0, verbose_name='Опыт работы (кол-во лет)')),
                ('driverLicense', models.CharField(max_length=100, unique=True, verbose_name='Водительские права')),
                ('licenseDate', models.DateField(verbose_name='Дата получения прав')),
                ('driverStatus', models.CharField(choices=[('on_order', 'Выполняет заказ'), ('waiting_order', 'В ожидании заказа'), ('on_sick_leave', 'На больничном'), ('on_vacation', 'В отпуске'), ('nonworking_time', 'Нерабочее время'), ('fired', 'Уволен')], default='nonworking_time', max_length=30, verbose_name='Статус водителя')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.car', verbose_name='Машина')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ФИО')),
            ],
            options={
                'verbose_name': 'водитель',
                'verbose_name_plural': 'водители',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='Название новости')),
                ('description', models.TextField(blank=True, verbose_name='Описание новости')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Картинка новости')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('published', 'Опубликована')], default='draft', max_length=20, verbose_name='Статус новости')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации')),
            ],
            options={
                'verbose_name': 'новость',
                'verbose_name_plural': 'новости',
            },
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(default=0, verbose_name='Цена')),
                ('startTown', models.CharField(max_length=200, unique=True, verbose_name='Начальный насел. пункт')),
                ('endTown', models.CharField(max_length=200, unique=True, verbose_name='Конечный насел. пункт')),
            ],
            options={
                'verbose_name': 'цена',
                'verbose_name_plural': 'цены',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(default=0, verbose_name='Цена')),
                ('unauthorizedUser', models.CharField(blank=True, max_length=100, null=True, verbose_name='Неавторизованный клиент')),
                ('town', models.CharField(max_length=100, verbose_name='Город')),
                ('street', models.CharField(max_length=100, verbose_name='Улица')),
                ('house', models.CharField(max_length=100, verbose_name='Дом')),
                ('entrance', models.IntegerField(default=1, verbose_name='Подъезд')),
                ('destinationTown', models.CharField(max_length=100, verbose_name='Город')),
                ('destinationStreet', models.CharField(max_length=100, verbose_name='Улица')),
                ('destinationHouse', models.CharField(max_length=100, verbose_name='Дом')),
                ('orderStatus', models.CharField(choices=[('client_waiting', 'клиент ждет машину'), ('driver_waiting', 'водитель ожидает клиента'), ('client_canceled', 'клиент отменил заказ'), ('in_progress', 'клиента отвозят'), ('completed', 'заказ выполнен')], default='client_waiting', max_length=30, verbose_name='Статус заказа')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время оформления')),
                ('scheduledTime', models.DateTimeField(blank=True, null=True, verbose_name='Когда забрать клиента')),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.discount', verbose_name='Скидка')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.driver', verbose_name='Водитель')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото оператора')),
                ('birthdate', models.DateField(verbose_name='Дата рождения')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Телефон')),
                ('workExperience', models.IntegerField(default=0, verbose_name='Опыт работы (кол-во лет)')),
                ('operatorStatus', models.CharField(choices=[('serve_client', 'Обслуживает клиента'), ('waiting', 'В ожидании'), ('on_sick_leave', 'На больничном'), ('on_vacation', 'В отпуске'), ('nonworking_time', 'Нерабочее время'), ('fired', 'Уволен')], default='nonworking_time', max_length=30, verbose_name='Статус оператора')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ФИО')),
            ],
            options={
                'verbose_name': 'оператор',
                'verbose_name_plural': 'операторы',
            },
        ),
        migrations.CreateModel(
            name='DriverRaitingComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.driver', verbose_name='Водитель')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'комментарий клиента',
                'verbose_name_plural': 'комментарии клиентов',
            },
        ),
        migrations.CreateModel(
            name='DriverRaiting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raiting', models.FloatField(default=5.0, verbose_name='Оценка клиента')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.driver', verbose_name='Водитель')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'оценка клиента',
                'verbose_name_plural': 'оценки клиентов',
            },
        ),
        migrations.AddField(
            model_name='car',
            name='carType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cartype', verbose_name='Тип авто'),
        ),
    ]
